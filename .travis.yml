sudo: required
dist: bionic

language: cpp

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - lcov
      compiler: gcc
      env:
        - COMPILER=g++-6
        - CONFIGURATION=debug
        - CXXFLAGS="-std=c++11 -O0 -fprofile-arcs -ftest-coverage --coverage"
        - LINKFLAGS="--coverage"
        - GCOV=true
      after_success:
        - lcov --directory . --capture --output-file coverage.info
        - lcov --extract coverage.info "$PWD/src/*" --output-file coverage.info
        - lcov --list coverage.info
        - bash <(curl -s https://codecov.io/bash) -X gcov
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      compiler: gcc
      env:
        - COMPILER=g++-6
        - CONFIGURATION=release
        - CXXFLAGS="-std=c++11"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      compiler: gcc
      env:
        - COMPILER=g++-6
        - CONFIGURATION=debug
        - CXXFLAGS="-std=c++11 -fsanitize=undefined"
        - LINKFLAGS="-lubsan"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      compiler: gcc
      env:
        - COMPILER=g++-6
        - CONFIGURATION=release
        - CXXFLAGS="-std=c++14"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      compiler: gcc
      env:
        - COMPILER=g++-6
        - CONFIGURATION=debug
        - CXXFLAGS="-std=c++14"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      compiler: gcc
      env:
        - COMPILER=g++-7
        - CONFIGURATION=release
        - CXXFLAGS="-std=c++17 -fsanitize=undefined"
        - LINKFLAGS="-lubsan"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      compiler: gcc
      env:
        - COMPILER=g++-7
        - CONFIGURATION=debug
        - CXXFLAGS="-std=c++17"
    - os: osx
      compiler: clang
      env:
        - COMPILER=clang++
        - CONFIGURATION=release
        - CXXFLAGS="-std=c++11 -stdlib=libc++"
    - os: osx
      compiler: clang
      env:
        - COMPILER=clang++
        - CONFIGURATION=debug
        - CXXFLAGS="-std=c++11 -stdlib=libc++ -fsanitize=undefined"
        - LINKFLAGS="-fsanitize=undefined"
    - os: osx
      compiler: clang
      env:
        - COMPILER=clang++
        - CONFIGURATION=release
        - CXXFLAGS="-std=c++14 -stdlib=libc++"
    - os: osx
      compiler: clang
      env:
        - COMPILER=clang++
        - CONFIGURATION=debug
        - CXXFLAGS="-std=c++14 -stdlib=libc++"

install:
  - mkdir build
  - cd build
  - cmake -G"Unix Makefiles" -DCMAKE_CXX_FLAGS="$CXXFLAGS" -DCMAKE_EXE_LINKER_FLAGS="$LINKFLAGS" ..

script:
  - export CXX=$COMPILER
  - make test_dtoa
  - ./test/test_dtoa
