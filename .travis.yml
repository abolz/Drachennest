sudo: required
dist: xenial

language: cpp

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - lcov
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - CONFIGURATION=Debug
        - CXXFLAGS="-std=c++11 -O0 -fprofile-arcs -ftest-coverage --coverage"
        - LINKFLAGS="--coverage"
        - GCOV=true
      after_success:
        - echo $PWD
        - lcov --version
        - lcov --directory . --capture --output-file coverage.info
        - lcov --remove coverage.info "test/*" "ext/*" "/usr/*" --output-file coverage.info
        # - lcov --extract coverage.info "$PWD/src/*" --output-file coverage.info
        - lcov --list coverage.info
        - bash <(curl -s https://codecov.io/bash) -X gcov
        # - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "no coverage reports"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - CONFIGURATION=Release
        - CXXFLAGS="-std=c++11"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - CONFIGURATION=Debug
        - CXXFLAGS="-std=c++11"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - CONFIGURATION=Release
        - CXXFLAGS="-std=c++14"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - CONFIGURATION=Debug
        - CXXFLAGS="-std=c++14"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - CONFIGURATION=Release
        - CXXFLAGS="-std=c++17"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - CONFIGURATION=Debug
        - CXXFLAGS="-std=c++17"
    - os: osx
      compiler: clang
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CONFIGURATION=Release
        - CXXFLAGS="-std=c++11 -stdlib=libc++"
    - os: osx
      compiler: clang
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CONFIGURATION=Debug
        - CXXFLAGS="-std=c++11 -stdlib=libc++ -fsanitize=undefined"
        - LINKFLAGS="-fsanitize=undefined"
    - os: osx
      compiler: clang
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CONFIGURATION=Release
        - CXXFLAGS="-std=c++14 -stdlib=libc++"
    - os: osx
      compiler: clang
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CONFIGURATION=Debug
        - CXXFLAGS="-std=c++14 -stdlib=libc++"

before_install:
  - eval "${MATRIX_EVAL}"

install:
  - mkdir build
  - cd build
  - cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE="$CONFIGURATION" -DCMAKE_CXX_FLAGS="$CXXFLAGS" -DCMAKE_EXE_LINKER_FLAGS="$LINKFLAGS" ..

script:
  - make test_all
  - ./test/test_all
